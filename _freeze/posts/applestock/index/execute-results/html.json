{
  "hash": "9cc236eedfd505ded1a5c07e1c1da38c",
  "result": {
    "markdown": "---\ntitle: apple stock timeseries\nauthor: math4mads\ndate: '2023-09-07'\ncategories:\n  - julia\n  - timeseries\n  - stat2\nformat:\n  html:\n    code-fold: true\nimage: p1431-pricelag-diff-lag.png\n---\n\n##### 加载软件包\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\ninclude(\"../utils.jl\")\nusing  RCall\nusing  GLMakie,DataFrames,Pipe,PrettyTables,DataFramesMeta,FreqTables\nusing  StatsBase,TableTransforms,Random,TimeSeries,Dates\nusing  GLM,AnovaGLM,HypothesisTests,Distributions\nRandom.seed!(34343)\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\nTaskLocalRNG()\n```\n:::\n:::\n\n\n### 1.  load data\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\n desc=Stat2Table(1431,\"AppleStock\",\"stock time series\",[\"Date\", \"Price\", \"Change\", \"Volume\"])\n data=@pipe load_rda(desc.name)\n display(first(data,5))\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div><div style = \"float: left;\"><span>5×4 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">Date</th><th style = \"text-align: left;\">Price</th><th style = \"text-align: left;\">Change</th><th style = \"text-align: left;\">Volume</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"CategoricalArrays.CategoricalValue{String, UInt8}\" style = \"text-align: left;\">Cat…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Union{Missing, Float64}\" style = \"text-align: left;\">Float64?</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">7/21/2016</td><td style = \"text-align: right;\">99.43</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: right;\">32.69</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">7/22/2016</td><td style = \"text-align: right;\">98.66</td><td style = \"text-align: right;\">-0.77</td><td style = \"text-align: right;\">28.218</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">7/25/2016</td><td style = \"text-align: right;\">97.34</td><td style = \"text-align: right;\">-1.32</td><td style = \"text-align: right;\">40.291</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">7/26/2016</td><td style = \"text-align: right;\">96.67</td><td style = \"text-align: right;\">-0.67</td><td style = \"text-align: right;\">53.455</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">7/27/2016</td><td style = \"text-align: right;\">102.95</td><td style = \"text-align: right;\">6.28</td><td style = \"text-align: right;\">92.144</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n###  2. 定义随机行走方法\n>从$Normal∼(0,1.5)$ 随机选择下一天的股价变化值\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\n        d=Normal(0,1.5)\n        \n        randomwalks=[cumsum([100,rand(d,65)...];dims=1) for i in 1:3]\n        series4=[data[:,:Price],randomwalks...] #一行真实数据, 三行随机行走数据\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n4-element Vector{Vector{Float64}}:\n [99.43, 98.66, 97.34, 96.67, 102.95, 104.34, 104.21, 106.05, 104.48, 105.79  …  116.05, 116.3, 117.34, 116.98, 117.63, 117.55, 117.47, 117.12, 117.06, 116.6]\n [100.0, 99.71100522358383, 99.5379648163166, 99.40081538232396, 99.6260843041962, 100.57421151049427, 101.45881752307182, 101.91928485011391, 102.90291624439094, 106.3991772327056  …  110.33894411223798, 111.79258897743186, 113.67763209161404, 111.73746570622019, 109.0843035869679, 110.07859556120633, 112.40366720512326, 114.58166441085548, 114.51993577874079, 114.11636119130488]\n [100.0, 98.17433941107218, 97.59051556634807, 95.8476837421727, 94.836522197557, 94.85665233555892, 92.141561273334, 92.941812820688, 89.31518972137293, 88.22285746486334  …  109.90988558730332, 112.19702587168351, 112.32962867962743, 111.08286033088208, 112.51736026390181, 111.54669778407388, 111.3149652750737, 109.53103405260875, 107.74854673798316, 107.84389125005798]\n [100.0, 98.34996554119479, 99.23164731084827, 96.74499720697779, 95.93228229805187, 95.68588062044057, 98.89853362036573, 98.14984905958136, 98.44205338856115, 97.36117622011422  …  86.49517587606057, 86.14119482990043, 82.39569869009303, 81.5736868261495, 79.74510824017145, 81.04016489890297, 81.46562532936812, 81.8612215852697, 82.94571224282076, 80.89378586146861]\n```\n:::\n:::\n\n\n### 3. plot 实际股价和三组随机行走数据   \n\n::: {.cell execution_count=4}\n``` {.julia .cell-code}\n\"\"\"\n    plot_series()\n    apple stock series+ 3 random walk  series from 100, \n    dist=Norml(0,1.5)\n\n\"\"\"\n    function plot_series()\n        xs=1:nrow(data)\n        fig=Figure(resolution=(900,600))\n        axs=[Axis(fig[i,j];xlabel=\"day\",ylabel=\"Price\") for i in 1:2 for j in 1:2]\n        [Box(fig[i,j];color = (:orange,0.03),strokewidth=0.5) for i in 1:2 for j in 1:2 ]\n        labels=[i==1 ? \"real\" : \"randomwalk-$i\" for i in 1:4]\n        for i in 1:4\n           lines!(axs[i],xs, series4[i], label=labels[i])\n           \n           axislegend(axs[i])\n         end\n        fig\n    end\n    plot_series()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n![randomwalk](index_files/figure-html/fig-applestock-1-output-1.png){#fig-applestock-1}\n:::\n:::\n\n\n### 4. 随机行走 lag-diff plot\n\n::: {.cell execution_count=5}\n``` {.julia .cell-code}\n    function plot_difference()\n            \n            fig=Figure(resolution=(900,600))\n            axs=[Axis(fig[i,j];xlabel=\"day\",ylabel=\"Difference\") for i in 1:2 for j in 1:2]\n            [Box(fig[i,j];color = (:orange,0.03),strokewidth=0.5) for i in 1:2 for j in 1:2 ]\n            linkyaxes!(axs[1],axs[2:4]...)\n            labels=[i==1 ? \"real\" : \"randomwalk-$i\" for i in 1:4]\n            for i in 1:4\n                data=series4[i][1:end-1]\n                lag= series4[i][2:end]\n                diff=lag-data\n                lines!(axs[i],1:65, diff, label=labels[i])\n                hlines!(axs[i],[0],linewidth=3,linestyle=:dot,color=:red)\n                axislegend(axs[i])\n            end\n            fig\n    end\n\n    plot_difference()\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n![randomwalk-lag-diff](index_files/figure-html/fig-applestock-2-output-1.png){#fig-applestock-2}\n:::\n:::\n\n\n### 5. price lag  difference plot\n\n::: {.cell execution_count=6}\n``` {.julia .cell-code}\nfunction plot_lag()\n        \n        data=series4[1][1:end-1]\n        lag= series4[1][2:end]\n        diff=lag-data\n        data2=diff[1:end-1]\n        lag2=diff[2:end]\n        \n        fig=Figure(resolution=(900,400))\n        ax1=Axis(fig[1,1];xlabel=\"Previous Price\",ylabel=\"Price\")\n        ax2=Axis(fig[1,2];xlabel=\"Previous Difference\",ylabel=\"Difference\")\n        scatter!(ax1,data,lag;marker_style...)\n        scatter!(ax2,data2,lag2;marker_style...)\n\n        fig\n\n    end\n    plot_lag()\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n![price-lag-diff](index_files/figure-html/fig-applestock-3-output-1.png){#fig-applestock-3}\n:::\n:::\n\n\n### 6.  自相关检测\n\n::: {.cell execution_count=7}\n``` {.julia .cell-code}\n data=series4[1][1:end-1]\n    lag= series4[1][2:end]\n    diff=lag-data\n    acf1=autocor(data)  # price  autocor\n    acf2=autocor(diff)  # diff  autocor\n    function plot_acf()\n        fig=Figure(resolution=(900,300))\n        ax1=Axis(fig[1,1];xlabel=\"Lag\",ylabel=\"ACF\",title=\"Price Lag ACF\")\n        ax2=Axis(fig[1,2];xlabel=\"Lag\",ylabel=\"ACF\",title=\"Difference Lag ACF\")\n        linkyaxes!(ax1, ax2)\n        stem!(ax1,acf1[2:end])\n        stem!(ax2,acf2[2:end])\n        fig\n    end\n    plot_acf()\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n![auto-correlation detect](index_files/figure-html/fig-applestock-4-output-1.png){#fig-applestock-4}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}