{
  "hash": "fa88a8a2e8c721539ebbfcbd7b9b3334",
  "result": {
    "markdown": "---\ntitle: seasonal timeseries\nauthor: math4mads\ndate: '2023-09-07'\ncategories:\n  - julia\n  - timeseries\n  - stat2\nformat:\n  html:\n    code-fold: true\nimage: image.png\n---\n\nPeaceBridge2012 seasonal   time series\n\n:::{.callout-note}\n   **PeaceBridge2012** 记录了PeaceBridge 大桥的通行车辆记录\n   \n   - seasonal timeseries  linear Regression\n   - 使用 GLM.jl 线性回归方法\n   \n:::\n\n#### 加载软件包\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\n    include(\"utils.jl\")\n    using  RCall\n    using  GLMakie,DataFrames,Pipe,PrettyTables,DataFramesMeta,FreqTables\n    using  StatsBase,TableTransforms\n    using  GLM,AnovaGLM,HypothesisTests\n    res=(600,300)\n```\n\n::: {.cell-output .cell-output-display execution_count=35}\n```\n(600, 300)\n```\n:::\n:::\n\n\n###   1.    load data\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\n        desc=Stat2Table(1412,\"PeaceBridge2012\",\"seasonal time series\",[\"Year\", \"Month\", \"Traffic\", \"t\"])\n        data=@pipe load_rda(desc.name)\n        ts=tspan=data[:,:t]\n        @pt first(data,5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n┌───────┬───────┬─────────┬───────┐\n│  Year │ Month │ Traffic │     t │\n│ Int32 │ Int32 │ Float64 │ Int32 │\n├───────┼───────┼─────────┼───────┤\n│  2012 │     1 │   403.2 │     1 │\n│  2012 │     2 │   409.9 │     2 │\n│  2012 │     3 │   491.7 │     3 │\n│  2012 │     4 │   470.3 │     4 │\n│  2012 │     5 │   506.2 │     5 │\n└───────┴───────┴─────────┴───────┘\n```\n:::\n:::\n\n\n### 2.    plot time series\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\n  #| fig-cap: \"series plot\"\n  #| echo: true\n  fig1,ax1,plt1=scatterlines(data[:,:t],data[:,:Traffic];marker_style...,linewidth=4,figure = (; resolution = res))\n```\n\n::: {.cell-output .cell-output-display execution_count=37}\n![](index_files/figure-html/cell-4-output-1.png){}\n:::\n:::\n\n\n从 series 图中可以看到时间序列有明显的周期性变化,因此在拟合时需要\n使用周期项\n\n###  3.    cos,sin  tranformtion  for  fitting\n时间变量经过周期函数变换,$S$ 由时间周期决定,如果是年就为$12$\n$$Y=\\beta_0+ \\beta_1cos(\\frac{2\\pi t}{S})+\\beta_2sin(\\frac{2\\pi t}{S})+ε \\tag{1}$$\n\n定义两个函数作为线性组合的基函数(basis function), 回归模型对于基函数仍然是线性组合\n\n$$ X_{cos}=cos(\\frac{2\\pi t}{S}) \\tag{2.1}$$\n$$ X_{sin}=sin(\\frac{2\\pi t}{S}) \\tag{2.2}$$\n\n线性模型变形为:\n\n\n$$Y=\\beta_0+\\beta_1X_{cos}+\\beta_2X_{sin}+ε \\tag{3}$$\n\n::: {.cell execution_count=4}\n``` {.julia .cell-code}\n cost(t)=cos(2pi*t/12); sint(t)=sin(2pi*t/12)\n model1=lm(@formula(Traffic~cost(t)+sint(t)), data)\n```\n\n::: {.cell-output .cell-output-display execution_count=38}\n```\nStatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}\n\nTraffic ~ 1 + :(cost(t)) + :(sint(t))\n\nCoefficients:\n────────────────────────────────────────────────────────────────────────\n                Coef.  Std. Error      t  Pr(>|t|)  Lower 95%  Upper 95%\n────────────────────────────────────────────────────────────────────────\n(Intercept)  478.325      6.06123  78.92    <1e-49   466.117    490.533\ncost(t)      -78.2165     8.57187  -9.12    <1e-11   -95.4812   -60.9519\nsint(t)      -61.6879     8.57187  -7.20    <1e-08   -78.9525   -44.4232\n────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n\n\n### 4.    周期性模型 ftest   \n\n::: {.cell execution_count=5}\n``` {.julia .cell-code}\n ftest(model1.model)\n```\n\n::: {.cell-output .cell-output-display execution_count=39}\n```\nF-test against the null model:\nF-statistic: 67.53 on 48 observations and 2 degrees of freedom, p-value: <1e-13\n```\n:::\n:::\n\n\n:::{.callout-note}\n  **线性回归的t检验的0假设是所有回归项的系数都为0**\n  \n  - $h_0: 模型所有系数都为0$ \n  - $h_a: 存在系数不为零的回归项$\n   \n:::\n\n在$95\\%$置信区间下, $model1$ 的$pvalue$远远小于$0.05$\n所以 拒绝 0 假设, 接受备择假设:回归模型系数不全为 0 \n\n\n### 5.    linear added cos fitting\n线性模型添加 $cosine$ 变换的拟合\n\n::: {.cell execution_count=6}\n``` {.julia .cell-code}\n model2=lm(@formula(Traffic~cost(t)), data)\n function plot_cosine_fitting(fig)\n     # just cost  model\n    yhat2=predict(model2,select(data,:t))|>arr->round.(arr,digits=3)\n    lines!(ax1,ts,yhat2;color=:blue,linestyle=:dot,linewidth=2,label=\"cosine variable\")\n    #axislegend(ax1)\n    fig\n end\n plot_cosine_fitting(fig1)\n```\n\n::: {.cell-output .cell-output-display execution_count=40}\n![](index_files/figure-html/cell-7-output-1.png){}\n:::\n:::\n\n\n>周期性拟合满足条件, 但是没有达到最高值, 需要更新模型\n\n### 6.    month season  \n   将每个月份处理为目录变量\n   ,可以表示如下:\n\n$$Y=\\beta_0+\\beta_1Feb+\\beta_2Mar+\\cdots+\\beta_{11}Dec+ε  \\tag{4}$$\n\n:::{.callout-note}\n  **目录变量在 GLM.jl的方法**\n```julia\n    contrasts = Dict(:Month => DummyCoding())\n```\n参见GLM文档:[`Categorical Variables`](https://juliastats.github.io/StatsModels.jl/stable/contrasts/)\n:::\n\n::: {.cell execution_count=7}\n``` {.julia .cell-code}\n model3=lm(@formula(Traffic ~Month), data, contrasts = Dict(:Month => DummyCoding()))\n```\n\n::: {.cell-output .cell-output-display execution_count=41}\n```\nStatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}\n\nTraffic ~ 1 + Month\n\nCoefficients:\n────────────────────────────────────────────────────────────────────────\n               Coef.  Std. Error      t  Pr(>|t|)   Lower 95%  Upper 95%\n────────────────────────────────────────────────────────────────────────\n(Intercept)  383.075     12.9524  29.58    <1e-26  356.806      409.344\nMonth: 2     -10.675     18.3174  -0.58    0.5637  -47.8245      26.4745\nMonth: 3      78.225     18.3174   4.27    0.0001   41.0755     115.374\nMonth: 4      64.9       18.3174   3.54    0.0011   27.7505     102.049\nMonth: 5     108.025     18.3174   5.90    <1e-06   70.8755     145.174\nMonth: 6     133.475     18.3174   7.29    <1e-07   96.3255     170.624\nMonth: 7     228.975     18.3174  12.50    <1e-13  191.826      266.124\nMonth: 8     255.775     18.3174  13.96    <1e-15  218.626      292.924\nMonth: 9     107.775     18.3174   5.88    <1e-06   70.6255     144.924\nMonth: 10     99.05      18.3174   5.41    <1e-05   61.9005     136.199\nMonth: 11     39.55      18.3174   2.16    0.0376    2.40052     76.6995\nMonth: 12     37.925     18.3174   2.07    0.0456    0.775517    75.0745\n────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n\n\n:::{.callout-note}\nmonth1作为常数项,回归是以1月的数据作为基准, month2:-10.675 ,意思是在二月份比一月份\n少-10.675*1000车辆通行,其他月份同样处理\n:::\n\n\n### 7.    plot month season variable \n绘制拟合曲线\n\n::: {.cell execution_count=8}\n``` {.julia .cell-code}\n  yhat3=predict(model3,select(data,:Month))|>arr->round.(arr,digits=3)\n  lines!(ax1,data[:,:t],yhat3;color=:red,linestyle=:dash,linewidth=3,label=\"seasonal variable\") \n  axislegend(ax1)\n  fig1\n```\n\n::: {.cell-output .cell-output-display execution_count=42}\n![](index_files/figure-html/cell-9-output-1.png){}\n:::\n:::\n\n\n### 8.    plot  cost, month sesaon rediduals\ncos 变换的模型与周期性变量模型模型拟合残差图\n\n::: {.cell execution_count=9}\n``` {.julia .cell-code}\n        cost_resid=residuals(model1)\n        season_resid=residuals(model3)\n        xs4=data[:,:t]\n       function plot_pair_resid()\n          fig=Figure(resolution=(1200,300))\n          ax1=Axis(fig[1,1];xlabel=\"time\",ylabel=\"cost-rediduals\")\n          ax2=Axis(fig[1,2];xlabel=\"time\",ylabel=\"monthseason-rediduals\")\n          Box(fig[1,1];color = (:orange,0.05),strokewidth=0.5)\n          Box(fig[1,2];color = (:orange,0.05),strokewidth=0.5)\n          linkyaxes!(ax1, ax2)\n          lines!(ax1,xs4,cost_resid)\n          lines!(ax2,xs4,season_resid)\n          hlines!(ax1,[0],linestyle=:dot, linewidth=2,color=(:red, 0.8))\n          hlines!(ax2,[0],linestyle=:dot, linewidth=2,color=(:red, 0.8))\n          fig\n        end\n        plot_pair_resid()\n```\n\n::: {.cell-output .cell-output-display execution_count=43}\n![](index_files/figure-html/cell-10-output-1.png){}\n:::\n:::\n\n\n可以看到周期性模型的残差非常小\n\n### 9.  cosine model 和 month season model $R^2$ 的比较\n\n::: {.cell execution_count=10}\n``` {.julia .cell-code}\nDict(:cos_model=>r2(model1),:month_seasonal_model=>r2(model3))\n```\n\n::: {.cell-output .cell-output-display execution_count=44}\n```\nDict{Symbol, Float64} with 2 entries:\n  :month_seasonal_model => 0.923915\n  :cos_model            => 0.750072\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}